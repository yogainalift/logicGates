<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_AND</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vars
output = false;
flag = false;
input1 = false;
input2 = false;
collidesWith = ds_map_create();
changed = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hello
//top left collision rect (GET REKT)
//if (!input1){
    var x1 = x - sprite_width/2;
    var y1 = y - sprite_height/2;
    var x2 = x1 + 1;
    var y2 = y - 1;

    in1 = collision_rectangle(x1, y1, x2, y2, obj_wire, false, true);
  
    if (in1 != noone) {
        if (in1.enabled){
            input1 = true;
       }
       else{
            input1= false;
       }
    }
//}

//bottom left collision rect (GOT REKT biaatch)
//if (!input2){
    var x1 = x - sprite_width/2;
    var y1 = y+1;
    var x2 = x1 + 1;
    var y2 = y + sprite_height/2;
    
    in2 = collision_rectangle(x1, y1, x2, y2, obj_wire, false, true);
    
    if (in2 != noone){
        if (in2.enabled){
            input2 = true;
        } else{
            input2= false;
       }
    }
//}


if (input1 &amp;&amp; input2){
    if (!changed){
        enabled = true;
        instance_deactivate_object(in1);
        instance_deactivate_object(in2);
        
        wire = fill_lists(self);
        
        var count = 0;
        for(i=ds_map_find_first(wire); 
            count&lt;ds_map_size(wire);
            i=ds_map_find_next(wire,i)) {
                i.enabled = true;
                count += 1;
        }
        changed = !changed;
    }
} else {
   // input1 = false;
  //  input2 = false;
    enabled = false;
    if (changed){
        var count = 0;
        for(i=ds_map_find_first(wire); 
            count&lt;ds_map_size(wire);
            i=ds_map_find_next(wire,i)) {
                i.enabled = false;
                count += 1;
        }
        changed = !changed;   
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_space) || keyboard_check_pressed(vk_enter)) || mouse_check_button_pressed(mb_left)
{
    show_debug_message("pressed space or enter or left click");
    audio_stop_all();
    audio_play_sound(bgm_ingame2,0,true);
    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_font(Arcade);
draw_set_color(c_white);

w=view_wview[0];
h=view_hview[0];

draw_set_halign(fa_left);
draw_text_transformed(150,(h/2)-(2*(h/6)), "Doctor  Electron  wants  to  eat  frozen  pizza, but  his  laboratory  microwave  oven  is  broken!",0.9,0.9,0); 
draw_set_halign(fa_right);
draw_sprite(spr_character,1,100,(h/2)-(2*(h/6)));
draw_set_halign(fa_left);
draw_text_transformed(150,(h/2)-(h/6), "Fortunately  he  studied  at  the  Tue  so  he  knows  how  electric  circuits  work.",0.9,0.9,0);
draw_set_halign(fa_right);
draw_sprite_ext(spr_tue,1,100,(h/2)-(h/6),0.1,0.1,0,c_white,1);
draw_set_halign(fa_left);
draw_text_transformed(150,(h/2), "By  clicking  on  an  input  switch  he  can  enable  or  disable  it  to  give  power  to  a  wire.",0.9,0.9,0); 
draw_set_halign(fa_right);
draw_sprite(spr_input,1,100,(h/2));
draw_set_halign(fa_left);
draw_text_transformed(150,(h/2)+(h/6), "The  microwave  has  electric  gates  inside  it  that  manipulate  power  in  different  ways.",0.9,0.9,0);
draw_set_halign(fa_right);
draw_sprite(spr_gate_AND,1,100,(h/2)+(h/6));
draw_set_halign(fa_left);
draw_text_transformed(150,(h/2)+(2*(h/6)), "Try  to  power  the  gates  to  restore  power  to  the  outputs  and  help  Doctor  Electron  ",0.9,0.9,0);
draw_text_transformed(150,(h/2)+(2*(h/6)+40),"satisfy  his  hunger  for  pizza!",0.9,0.9,0); 
draw_set_halign(fa_right);
draw_sprite(spr_output,1,100,(h/2)+(2*(h/6)));
draw_set_halign(fa_center);
draw_text_transformed(w/2,(h/2)+(2*(h/6)+100),"Lect  click  to  continue",1,1,0); 

/*
draw_text(w/2,h/2, "
Dr.Electron wants to eat frozen pizza, but his laboratory microwave oven is broken! 
Fortunately, he studied at the Tue so he knows how electric circuits work. 
By clicking on an input switch he can enable or disable it to give power to a wire.
The microwave has electric gates inside it that manipulate power in different ways.
Try to power the gates in such a way to restore power to the circuit and help Dr. Electron satisfy his hunger for pizza!
");
draw_sprite(spr_character,1,w/2,(h/2)-(2*(h/6);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
